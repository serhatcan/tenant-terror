
import java.util.List;

//
//  Generated by StarUML(tm) Java Add-In
//
//  @ Project : TenantTerror
//  @ File Name : RandomMove.java
//  @ Date : 11/11/2014
//  @ Author : Serhat CAN
//
//

public class RandomMove extends Strategy {
	Simulation s;
	DO dObject;

	public double scanRadius; // will be random
	public double direction;

	public double targetX;
	public double targetY;

	public RandomMove(Simulation simulation) {
		dObject = new DO();
		s = Simulation.getInstance();

		scanRadius = 50;

		randomXandY();

	}

	@Override
	public void step(Entity e, double deltaTime) {
		List<Entity> temp = s.entities;

		move(e, deltaTime);

		for (Entity ent : temp) {

			// if sees an entity on the rode
			if (ent.x == e.x && ent.y == e.y && ent != e) {

				// call the act method
				if (ent instanceof House) {
					House hous = (House) ent;

					if (hous != null) {

						// just act
						if (!e.act(hous)) {
							// closest = null;

						} else {
							isFinished = true;
						}

					}

				} else {
					// new target
					randomXandY();

				}
			}
		}

		// new target
		if (targetX == e.x && targetY == e.y) {

			randomXandY();
		}

	}

	private void move(Entity e, double deltaTime) {

		double deltaX = targetX - e.x;
		double deltaY = targetY - e.y;

		double distance = Math.sqrt(deltaX * deltaX + deltaY * deltaY);

		double stepX = (deltaX / distance) * e.speed * deltaTime;
		double stepY = (deltaY / distance) * e.speed * deltaTime;

		if (distance < e.speed) {
			stepX = deltaX;
			stepY = deltaY;

		}

		e.x += stepX;
		e.y += stepY;

	}

	private void randomXandY() {
		targetX = dObject.randomXInGridArea();
		targetY = dObject.randomYInGridArea();
	}

}
